#include iostream

using namespace std;

bool flag;

bool proverka(int m, int k, int p)
{
	if (m  k  p)
		flag = true;
	else false;

	return flag;
}

int shenks(int m, int k, int p, int y, int a)
{
	long int res;
	long int arr_1[30];

	long int arr_2[30];

	for (int i = 1; i = m; i++)
	{
		arr_1[i] = y  pow(a,(i - 1));
		arr_1[i] = arr_1[i] % p;
	}
	
	for (int i = 1; i = m; i++)
		cout  arr_1[i]  endl;

	
	for (int i = 1; i = k; i++) 
	{
		arr_2[i] = pow(a,(im));
		arr_2[i] = arr_2[i] % p;
	}

	for (int i = 1; i = k; i++)
		cout  arr_2[i]  endl;
	
	for (int i = 1; i = m; i++)
	{
		for (int j = 1; j = k; j++)
		{
			if (arr_1[i] == arr_2[j])
			{
				res = (i-1)  m - j;
			}
			break;
		}
	}

 	return res;
	
}

long int perebor(int a, int y, int p)
{
	int res;
	for (int i = 0; i  (p - 1); i++) 
	{
		int w = pow(a, i);
		w = w % p;
		if (y == w) 
		{
			res = i;
			break;
		}
		
	}

 	return res;
}

long int vozvedenie(long int a, long int x, long int p) {
	long int current, result;

	int j = 0;
	int i_mass2[30];

	current = a;

	result = 1;

	while (x = 1)
	{
		i_mass2[j] = x % 2;
		x = 2;
		j++;
	}


	int arr = new int[j];
	arr[0] = a % p;
	for (int i = 1; i  j; i++)
	{
		arr[i] = arr[i - 1]  arr[i - 1];
		arr[i] = arr[i] % p;
	}

	for (int i = 0; i  j; i++)
	{
		if (i_mass2[i] == 1) {
			result = result  arr[i];
			result = result % p;
		}
	}


	return result;

}

int main()
{
	long int x, x_2;
	int m, k, a, p, y;

	cout  Enter the a;
	cin  a;

	cout  Enter the p;
	cin  p;

	cout  Enter the y;
	cin  y;

	do
	{
		cout  Enter the m; 
		cin  m;

		cout  Enter the k;
		cin  k;

		flag = proverka(m, k, p);

		if (flag == false)
		{
			cout  nWRONG INPUT n  endl;
		}
	} while (flag == false);
	
	
	x = shenks(m, k, p, y, a);

	long int prov = vozvedenie(a, x, p);

	x_2 = perebor(a, y, p);

	cout  Znachenie stepeni   x  endl;
	
	cout  Znachenie stepeni_perebor   x_2  endl;

	cout  Proverka po y   prov  endl;
	cin.get();
	return 0;
}